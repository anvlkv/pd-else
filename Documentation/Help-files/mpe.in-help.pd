#N canvas 381 43 562 486 10;
#X obj 2 3 cnv 15 301 42 empty empty mpe.in 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1;
#X restore 305 3 graph;
#X obj 22 39 cnv 4 4 4 empty empty Get\ MIDI\ Polyphonic\ Expression\ data 0 28 2 18 #e0e0e0 #000000 0;
#X obj 2 245 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 100 253 cnv 17 3 34 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 2 324 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 384 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X obj 100 334 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 2 451 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 155 252 float;
#X text 199 253 - Raw MIDI data;
#X obj 215 170 mpe.in;
#X text 163 335 list;
#X text 152 394 -ext: only listen to external input source;
#X text 119 269 ext <float>;
#X text 199 269 - non zero sets to listen only to external input source;
#N canvas 549 85 542 511 details 0;
#X obj 101 253 mpe.in;
#X msg 101 155 209 \, 60;
#X msg 118 184 177 \, 74 \, 111;
#X text 155 155 pressure;
#X text 203 182 slide;
#X msg 56 104 145 \, 60 \, 127;
#X msg 80 129 129 \, 60 \, 111;
#X msg 129 210 225 \, 101 \, 108;
#X text 219 210 bend;
#X obj 101 308 route list noteon noteoff pressure slide bend;
#X obj 101 429 display;
#X obj 145 399 display;
#X obj 190 366 display;
#X obj 234 335 display;
#X obj 279 403 display;
#X obj 323 357 display;
#X obj 101 281 route 0;
#X text 156 281 route voice 0;
#X text 137 102 noteon;
#X text 163 128 noteoff;
#X text 30 17 The data types are Note On \, Note Off \, Channel Pressure \, Slide (Control #74) and Pitch Bend. Note On and Note Off messages are also output as lists with <pitch> \, <on velocity> and <off velocity>., f 75;
#X text 62 73 Raw MIDI input;
#X text 307 84 You can route each voice or connect it directly to a [clone] object which will route the rest of the list internally., f 28;
#X text 306 148 You can then furtherly route the different data types inside clone or whatever., f 28;
#X connect 0 0 16 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 9 0 10 0;
#X connect 9 1 11 0;
#X connect 9 2 12 0;
#X connect 9 3 13 0;
#X connect 9 4 14 0;
#X connect 9 5 15 0;
#X connect 16 0 9 0;
#X restore 450 173 pd details;
#X msg 215 142 180 \, 74 \, 127;
#X text 299 142 raw MIDI data;
#X obj 215 202 display;
#X text 199 335 - voice number \, data type and data;
#N canvas 653 199 427 384 external 0;
#X text 61 31 [mpe.in] automatically listens to whatever is connected as a MIDI device in Pd. So it's like it has a built in [midiin] object feeding it. Hence \, if you have a MPE aware device connected to Pd \, you don't need to worry about anything and just get the data from it. This is considered to be an "internal" source., f 55;
#X text 62 111 The inlet provides and "external" source of raw MIDI data input. This is needed if you have \, for instance \, the [midi] object from ELSE reading a MIDI file or something. If \, by any chance \, you just want the object to receive from this external source and not listen to the internal connected device \, you can use the '-ext' flag or 'ext' message \, to force only the external input., f 55;
#X obj 188 243 midi;
#X obj 188 299 mpe.in;
#X obj 188 331 print;
#X msg 124 262 ext \$1;
#X obj 124 234 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X restore 450 213 pd external;
#X text 48 87 [mpe.in] sends "cooked" MPE data from external "raw" MIDI data or an internally connected device. It outputs most common MIDI messages prepended with a voice number indexed from 0 (which depends on MIDI channel in this case)., f 69;
#X obj 297 168 display;
#X text 317 171 port number;
#X obj 100 358 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 157 359 float;
#X text 199 359 - port number;
#X obj 100 298 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 157 299 float;
#X text 199 299 - set port number to listen to;
#X obj 2 419 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X text 135 428 1) float - set port number to listen to (default 0 \, all);
#N canvas 549 85 416 307 port 0;
#X obj 129 160 mpe.in;
#X msg 162 106 0;
#X msg 223 106 3;
#X msg 192 106 1;
#X floatatom 192 136 5 0 0 0 - - - 0;
#X obj 192 187 display;
#X obj 129 227 display;
#X text 39 28 The right outlet outputs port number. The argument sets the port number to listen to \, as well as the right inlet. By default \, the value is '0' \, which means "omni" \, that is \, listen to all ports., f 57;
#X connect 0 0 6 0;
#X connect 0 1 5 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 0 1;
#X restore 450 193 pd port number;
#X connect 19 0 27 0;
#X connect 19 1 31 0;
#X connect 25 0 19 0;
